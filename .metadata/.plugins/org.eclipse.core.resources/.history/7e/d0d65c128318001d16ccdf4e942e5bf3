package test.servlet;

// 새로운 Servlet을 사용할 때는 Server를 껐다가 켜야한다!

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

// 3. 요청 맵핑 (처리할 요청 경로를 작성한다.) -> 반드시 / 로 시작을 해야하고 프로젝트명은 쓰지 않는다. 프로젝트명을 제외한 그 뒤의 경로를 적어줘야한다.
@WebServlet("/send")
public class SendServlet extends HttpServlet{ // 1. HttpServlet 클래스를 상속 받는다.
	
	// 2. service() 메소드 오버라이드(재정의)
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// req는 요청객체, resp는 응답객체
		System.out.println("요청이 오네?"); // console에 출력함.
		
		// 한글 깨지지 않도록 하는 방법
		req.setCharacterEncoding("utf-8");
		
		// 하나의 form에 여러개의 정보가 전달됐을때 구분하기 위해서 파라미터명도 같이 작성해줘야 한다.
		// msg 라는 파라미터명으로 전송되는 문자열 읽어오기
		String a = req.getParameter("msg");
		
		System.out.println("msg : "+a);
		
		// 응답인코딩 설정
		resp.setCharacterEncoding("utf-8");
		// 응답 컨텐츠 설정
		resp.setContentType("text/html; charset=utf-8");
		
		// 요청을 한 클라이언트에게 문자열을 응답할 객체 얻어오기
		PrintWriter pw = resp.getWriter();
		pw.println("!<doctype html");
		pw.println("<html>");
		pw.println("<head>");
		pw.println("<meta charset='utf-8>");
		pw.println("<title> 제목 입니다</title>");
		pw.println("</head>");
		pw.println("<body>");
		pw.println("<p>oh~</p>"); // 방금 요청을 한 클라이언트 웹브라우저로 출력함.
		pw.println("<p>who are you?</p>");
		pw.println("<p>누구니</p>");
		pw.println("<p><img src='/Hello/images/kim1.png'></p>");
		pw.println("<p><img src=\"/Hello/images/kim1.png\"></p>");
		pw.println("</body>");
		pw.println("</html>");
		pw.flush(); // 방출
		pw.close(); // 닫아주기
	}
}

